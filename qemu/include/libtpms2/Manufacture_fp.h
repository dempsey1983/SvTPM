/*(Copyright)

        Microsoft Copyright 2009, 2010, 2011, 2012, 2013
        Confidential Information

*/


/*(Auto)

    Automatically Generated by ExtractPrototypes version 0.93, Oct 9, 2012


    Date: Jul 25, 2013
    Time: 04:59:20 PM

*/
#ifndef    MANUFACTURE_FP_H
#define    MANUFACTURE_FP_H
typedef uint32_t  TPM_RESULT;		/* The return code from a function  */
#define TPM_SUCCESS  0x0
typedef unsigned char  TPM_BOOL;        /* TRUE/FALSE field. TRUE = 0x01, FALSE = 0x00 Use TPM_BOOL
                                           because MS VC++ defines BOOL on Windows */
typedef uint32_t  TPM_MODIFIER_INDICATOR;



//*** TPM_Manufacture()
// This function initializes the TPM values in preparation for the TPM's first
// use. This function will fail if previously called. The TPM can be remanufactured
// by calling TPM_Teardown() first and then calling this function again.
// return type: int
//      0           success
//      1           manufacturing process previously performed
int
TPM_Manufacture(void);

//*** TPM_TearDown()
// This function prepares the TPM for re-manufacture. It should not be implemented
// in anything other than a simulated TPM.
//
// In this implementation, all that is needs is to stop the cryptographic units
// and set a flag to indicate that the TPM can be re-manufactured. This should
// be all that is necessary to start the manufacturing process again.
// return type: int
//      0        success
//      1        TPM not previously manufactured
int
TPM_TearDown(void);


#endif
